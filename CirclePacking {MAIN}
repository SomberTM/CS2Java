package circlepacking;

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;
import java.lang.Math.*;

public class CirclePacking extends JApplet {

    
    ArrayList<Circle> circles = new ArrayList<>();
    Random random = new Random();
    
    @Override
    public void init() {
        final int FRAMES = 60;
        javax.swing.Timer timer;
        timer = new javax.swing.Timer(FRAMES, (ActionEvent e) -> {
            for ( int i = 0; i < circles.size(); i++) {
                circles.get(i).grow();
            }
            checkAndCreate();
            repaint();
        });
        timer.start();
    }
    
    @Override
    public void paint(Graphics g) {
        check(g);
        repaint();
    }
    
    public void checkAndCreate() {
        int x = random.nextInt(300);
        int y = random.nextInt(300);
        boolean valid = true;
        
        for (int i = 0; i < circles.size(); i++) {
            int d = dist(x, y, circles.get(i).x, circles.get(i).y);
            if (d < circles.get(i).r) {
                valid = false;
                break;
            }
        }
        
        if ( valid ) {
            circles.add(new Circle(x,y,0));
        }
    }
    
    public void check(Graphics g) {
        for (int i = 0; i < circles.size(); i++) {
            if (circles.get(i).growing) {
                for (int j = 0; j < circles.size(); j++) {
                   if (circles.get(i) != circles.get(j)) {
                       circles.get(i).edges(circles.get(j));
                   }
                }
            }
            circles.get(i).show(g);
        }
    }
    
    public int dist(float x1, float y1, float x2, float y2) {
        double d;
        double p1 = Math.pow(x2 - x1, 2);
        double p2 = Math.pow(y2 - y1, 2);
        d = Math.sqrt(p1 + p2);
        return (int)(d);
    }
}
